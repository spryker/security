{% set productAlternatives = form.vars.data.productAlternatives %}

<div class="well">
    {% filter trans|raw %}
        <h3>Product Alternatives</h3>
        <p>This is a list of alternative products that current Concrete Product has.</p>
        <p><i>Note: You can add new product alternative using text field below.</i></p>
    {% endfilter %}
</div>

<div class="form-group col-sm-3 col-sm-3 col-md-3 col-lg-3 col-xl-3">
    {{ form_label(form['searchtext-autocomplete']) }}
    {{ form_errors(form['searchtext-autocomplete']) }}
    {{ form_widget(form['searchtext-autocomplete']) }}
</div>

<div id="items" class="col-sm-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
    <div>
        {% include '@ProductAlternativeGui/ProductAlternative/blocks/product-alternatives-table.twig' %}
    </div>
</div>

{# TODO: Resolve script itself and its location. #}
<script>
    let suggestInput = document.getElementById('product_concrete_form_edit_searchtext-autocomplete');

    suggestInput.addEventListener('change', (event) => {
        let suggestValue = event.target.value;

        addProductAlternative(suggestValue);
    });

    function addProductAlternative(suggestValue) {
        let alternativesBlock = document.querySelector('form #product_concrete_form_edit_product_alternatives');
        let savedAlternatives = getSavedAlternatives(alternativesBlock.children);

        if (savedAlternatives.indexOf(suggestValue) < 0) {
            alternativesBlock.innerHTML += '<input type="text" value="' + suggestValue + '"/>';
        }
    }

    function getSavedAlternatives(alternativeChilds) {
        let savedAlternatives = [];
        for (let i = 0; i < alternativeChilds.length; i++) {
            savedAlternatives[savedAlternatives.length] = alternativeChilds[i].value;
        }

        return savedAlternatives;
    }
</script>
